import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useUser } from '../../context/UserContext';

interface BecomeSellerStep {
  id: number;
  title: string;
  description: string;
  completed: boolean;
}

const BecomeSellerWizard: React.FC = () => {
  const [currentStep, setCurrentStep] = useState(1);
  const [policyAgreed, setPolicyAgreed] = useState(false);
  const { auth, user } = useUser();
  const navigate = useNavigate();

  const steps: BecomeSellerStep[] = [
    {
      id: 1,
      title: 'X√°c minh danh t√≠nh (KYC)',
      description: 'Ho√†n th√†nh x√°c minh danh t√≠nh ƒë·ªÉ ƒë·∫£m b·∫£o t√≠nh b·∫£o m·∫≠t',
      completed: auth?.isKyc || false // Based on actual KYC status
    },
    {
      id: 2,
      title: 'ƒê·ªìng √Ω ƒëi·ªÅu kho·∫£n',
      description: 'ƒê·ªçc v√† ƒë·ªìng √Ω c√°c ƒëi·ªÅu kho·∫£n d√†nh cho Seller',
      completed: policyAgreed
    },
    {
      id: 3,
      title: 'ƒêƒÉng k√Ω th√¥ng tin Seller',
      description: 'Cung c·∫•p th√¥ng tin kinh doanh v√† li√™n h·ªá',
      completed: false
    },
    {
      id: 4,
      title: 'Thi·∫øt l·∫≠p c·ª≠a h√†ng',
      description: 'T·∫°o c·ª≠a h√†ng v√† thi·∫øt l·∫≠p ch√≠nh s√°ch b√°n h√†ng',
      completed: false
    },
    {
      id: 5,
      title: 'X√°c minh t√†i kho·∫£n ng√¢n h√†ng',
      description: 'Li√™n k·∫øt t√†i kho·∫£n ng√¢n h√†ng ƒë·ªÉ nh·∫≠n thanh to√°n',
      completed: false
    }
  ];

  const handleStepClick = (stepId: number) => {
    // Step 1: Always accessible (KYC)
    if (stepId === 1) {
      setCurrentStep(stepId);
      return;
    }
    
    // Step 2: Accessible if KYC is completed
    if (stepId === 2 && auth?.isKyc) {
      setCurrentStep(stepId);
      return;
    }
    
    // Step 3+: Accessible if KYC completed AND policy agreed
    if (stepId >= 3 && auth?.isKyc && policyAgreed) {
      setCurrentStep(stepId);
      return;
    }
    
    // If requirements not met, don't allow navigation
    console.log('Step requirements not met');
  };

  const handleStartKYC = () => {
    // Navigate directly to UserCenter with state to show KYC settings tab
    navigate('/user-center', { 
      state: { activeTab: 'settings', activeSection: 'cert' } 
    });
    console.log('Navigating to UserCenter KYC settings...');
  };

  const handleStartSellerRegistration = () => {
    // Navigate to seller registration
    console.log('Starting seller registration...');
  };

  const renderStepContent = () => {
    switch (currentStep) {
      case 1:
        return (
          <div className="space-y-6">
            <div className="text-center">
              <div className="w-20 h-20 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-3xl">üÜî</span>
              </div>
              <h3 className="text-xl font-semibold text-gray-900 mb-2">
                X√°c minh danh t√≠nh (KYC)
              </h3>
              <p className="text-gray-600 mb-6">
                ƒê·ªÉ tr·ªü th√†nh seller, b·∫°n c·∫ßn ho√†n th√†nh quy tr√¨nh x√°c minh danh t√≠nh. 
                ƒêi·ªÅu n√†y gi√∫p ƒë·∫£m b·∫£o t√≠nh b·∫£o m·∫≠t v√† tin c·∫≠y trong h·ªá th·ªëng.
              </p>
            </div>

            {auth?.isKyc ? ( // Placeholder for KYC status - will be updated when API is integrated
              <div className="bg-green-50 border border-green-200 rounded-lg p-4">
                <div className="flex items-center">
                  <span className="text-green-500 text-xl mr-3">‚úÖ</span>
                  <div>
                    <h4 className="font-medium text-green-800">KYC ƒë√£ ho√†n th√†nh</h4>
                    <p className="text-green-600 text-sm">B·∫°n ƒë√£ x√°c minh danh t√≠nh th√†nh c√¥ng</p>
                  </div>
                </div>
              </div>
            ) : (
              <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                <div className="flex items-center justify-between">
                  <div className="flex items-center">
                    <span className="text-yellow-500 text-xl mr-3">‚ö†Ô∏è</span>
                    <div>
                      <h4 className="font-medium text-yellow-800">C·∫ßn x√°c minh KYC</h4>
                      <p className="text-yellow-600 text-sm">Vui l√≤ng ho√†n th√†nh KYC tr∆∞·ªõc khi ƒëƒÉng k√Ω seller</p>
                    </div>
                  </div>
                  <button
                    onClick={handleStartKYC}
                    className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                  >
                    B·∫Øt ƒë·∫ßu KYC
                  </button>
                </div>
              </div>
            )}

            <div className="bg-gray-50 rounded-lg p-4">
              <h4 className="font-medium text-gray-900 mb-3">T√†i li·ªáu c·∫ßn chu·∫©n b·ªã:</h4>
              <ul className="space-y-2 text-sm text-gray-600">
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-blue-500 rounded-full mr-3"></span>
                  CƒÉn c∆∞·ªõc c√¥ng d√¢n ho·∫∑c H·ªô chi·∫øu
                </li>
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-blue-500 rounded-full mr-3"></span>
                  ·∫¢nh selfie v·ªõi t√†i li·ªáu
                </li>
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-blue-500 rounded-full mr-3"></span>
                  Th√¥ng tin li√™n h·ªá ch√≠nh x√°c
                </li>
              </ul>
            </div>
          </div>
        );

      case 2:
        return (
          <div className="space-y-6">
            <div className="text-center">
              <div className="w-20 h-20 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-3xl">üìã</span>
              </div>
              <h3 className="text-xl font-semibold text-gray-900 mb-2">
                ƒê·ªìng √Ω ƒëi·ªÅu kho·∫£n Seller
              </h3>
              <p className="text-gray-600 mb-6">
                Vui l√≤ng ƒë·ªçc k·ªπ v√† ƒë·ªìng √Ω v·ªõi c√°c ƒëi·ªÅu kho·∫£n d√†nh cho Seller tr∆∞·ªõc khi ti·∫øp t·ª•c.
              </p>
            </div>

            {/* ƒêi·ªÅu kho·∫£n Policy */}
            <div className="bg-gray-50 rounded-lg p-6 max-h-80 overflow-y-auto border">
              <h4 className="font-semibold text-gray-900 mb-4">ƒêi·ªÅu kho·∫£n v√† ƒêi·ªÅu ki·ªán d√†nh cho Seller</h4>
              <div className="space-y-4 text-sm text-gray-700">
                <div>
                  <h5 className="font-medium mb-2">1. Tr√°ch nhi·ªám c·ªßa Seller</h5>
                  <p>‚Ä¢ Cung c·∫•p th√¥ng tin s·∫£n ph·∫©m ch√≠nh x√°c v√† ƒë·∫ßy ƒë·ªß</p>
                  <p>‚Ä¢ ƒê·∫£m b·∫£o ch·∫•t l∆∞·ª£ng s·∫£n ph·∫©m nh∆∞ m√¥ t·∫£</p>
                  <p>‚Ä¢ Th·ª±c hi·ªán giao h√†ng ƒë√∫ng th·ªùi gian cam k·∫øt</p>
                  <p>‚Ä¢ H·ªó tr·ª£ kh√°ch h√†ng m·ªôt c√°ch chuy√™n nghi·ªáp</p>
                </div>
                <div>
                  <h5 className="font-medium mb-2">2. Ch√≠nh s√°ch hoa h·ªìng</h5>
                  <p>‚Ä¢ N·ªÅn t·∫£ng s·∫Ω thu ph√≠ hoa h·ªìng t·ª´ m·ªói giao d·ªãch th√†nh c√¥ng</p>
                  <p>‚Ä¢ M·ª©c ph√≠ hoa h·ªìng s·∫Ω ƒë∆∞·ª£c th√¥ng b√°o r√µ r√†ng tr∆∞·ªõc khi b√°n</p>
                  <p>‚Ä¢ Thanh to√°n s·∫Ω ƒë∆∞·ª£c th·ª±c hi·ªán theo chu k·ª≥ ƒë√£ th·ªèa thu·∫≠n</p>
                </div>
                <div>
                  <h5 className="font-medium mb-2">3. Ch√≠nh s√°ch vi ph·∫°m</h5>
                  <p>‚Ä¢ Kh√¥ng ƒë∆∞·ª£c b√°n h√†ng gi·∫£, h√†ng vi ph·∫°m b·∫£n quy·ªÅn</p>
                  <p>‚Ä¢ Kh√¥ng ƒë∆∞·ª£c thao t√∫ng ƒë√°nh gi√° ho·∫∑c b√¨nh lu·∫≠n</p>
                  <p>‚Ä¢ Vi ph·∫°m nghi√™m tr·ªçng c√≥ th·ªÉ d·∫´n ƒë·∫øn kh√≥a t√†i kho·∫£n</p>
                </div>
                <div>
                  <h5 className="font-medium mb-2">4. Ch√≠nh s√°ch b·∫£o m·∫≠t</h5>
                  <p>‚Ä¢ Th√¥ng tin kh√°ch h√†ng ph·∫£i ƒë∆∞·ª£c b·∫£o m·∫≠t tuy·ªát ƒë·ªëi</p>
                  <p>‚Ä¢ Kh√¥ng ƒë∆∞·ª£c s·ª≠ d·ª•ng th√¥ng tin kh√°ch h√†ng cho m·ª•c ƒë√≠ch kh√°c</p>
                  <p>‚Ä¢ Tu√¢n th·ªß c√°c quy ƒë·ªãnh v·ªÅ b·∫£o v·ªá d·ªØ li·ªáu c√° nh√¢n</p>
                </div>
              </div>
            </div>

            {/* Checkbox ƒë·ªìng √Ω */}
            <div className="bg-white border-2 border-gray-200 rounded-lg p-4">
              <label className="flex items-start gap-3 cursor-pointer">
                <input
                  type="checkbox"
                  checked={policyAgreed}
                  onChange={(e) => setPolicyAgreed(e.target.checked)}
                  className="mt-1 w-5 h-5 text-blue-600 border-gray-300 rounded focus:ring-blue-500"
                />
                <div className="text-sm">
                  <span className="text-gray-900 font-medium">
                    T√¥i ƒë√£ ƒë·ªçc v√† ƒë·ªìng √Ω v·ªõi t·∫•t c·∫£ c√°c ƒëi·ªÅu kho·∫£n v√† ƒëi·ªÅu ki·ªán tr√™n
                  </span>
                  <p className="text-gray-600 mt-1">
                    B·∫±ng c√°ch ƒë√°nh d·∫•u v√†o √¥ n√†y, b·∫°n x√°c nh·∫≠n r·∫±ng b·∫°n hi·ªÉu v√† ch·∫•p nh·∫≠n c√°c quy ƒë·ªãnh c·ªßa n·ªÅn t·∫£ng.
                  </p>
                </div>
              </label>
            </div>

            {policyAgreed && (
              <div className="bg-green-50 border border-green-200 rounded-lg p-4">
                <div className="flex items-center">
                  <span className="text-green-500 text-xl mr-3">‚úÖ</span>
                  <div>
                    <h4 className="font-medium text-green-800">ƒê√£ ƒë·ªìng √Ω ƒëi·ªÅu kho·∫£n</h4>
                    <p className="text-green-600 text-sm">B·∫°n c√≥ th·ªÉ ti·∫øp t·ª•c sang b∆∞·ªõc ti·∫øp theo</p>
                  </div>
                </div>
              </div>
            )}
          </div>
        );

      case 3:
        return (
          <div className="space-y-6">
            <div className="text-center">
              <div className="w-20 h-20 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-3xl">üìã</span>
              </div>
              <h3 className="text-xl font-semibold text-gray-900 mb-2">
                ƒêƒÉng k√Ω th√¥ng tin Seller
              </h3>
              <p className="text-gray-600 mb-6">
                Cung c·∫•p th√¥ng tin v·ªÅ lo·∫°i h√¨nh kinh doanh v√† th√¥ng tin li√™n h·ªá.
              </p>
            </div>

            <div className="bg-gray-50 rounded-lg p-4">
              <h4 className="font-medium text-gray-900 mb-3">Th√¥ng tin c·∫ßn ƒëi·ªÅn:</h4>
              <ul className="space-y-2 text-sm text-gray-600">
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-green-500 rounded-full mr-3"></span>
                  Lo·∫°i h√¨nh kinh doanh (C√° nh√¢n/Doanh nghi·ªáp)
                </li>
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-green-500 rounded-full mr-3"></span>
                  T√™n c·ª≠a h√†ng/Doanh nghi·ªáp
                </li>
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-green-500 rounded-full mr-3"></span>
                  M√¥ t·∫£ ho·∫°t ƒë·ªông kinh doanh
                </li>
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-green-500 rounded-full mr-3"></span>
                  Th√¥ng tin li√™n h·ªá v√† ƒë·ªãa ch·ªâ
                </li>
              </ul>
            </div>

            <button
              onClick={handleStartSellerRegistration}
              disabled={!auth?.isKyc || !policyAgreed} // Require both KYC and policy agreement
              className={`w-full py-3 rounded-lg font-medium transition-colors ${
                auth?.isKyc && policyAgreed
                  ? 'bg-blue-600 text-white hover:bg-blue-700'
                  : 'bg-gray-300 text-gray-500 cursor-not-allowed'
              }`}
            >
              {!auth?.isKyc 
                ? 'C·∫ßn ho√†n th√†nh KYC tr∆∞·ªõc' 
                : !policyAgreed 
                ? 'C·∫ßn ƒë·ªìng √Ω ƒëi·ªÅu kho·∫£n tr∆∞·ªõc'
                : 'B·∫Øt ƒë·∫ßu ƒëƒÉng k√Ω'
              }
            </button>
          </div>
        );

      case 4:
        return (
          <div className="space-y-6">
            <div className="text-center">
              <div className="w-20 h-20 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-3xl">üè™</span>
              </div>
              <h3 className="text-xl font-semibold text-gray-900 mb-2">
                Thi·∫øt l·∫≠p c·ª≠a h√†ng
              </h3>
              <p className="text-gray-600 mb-6">
                T·∫°o c·ª≠a h√†ng tr·ª±c tuy·∫øn v√† thi·∫øt l·∫≠p c√°c ch√≠nh s√°ch b√°n h√†ng.
              </p>
            </div>

            <div className="bg-gray-50 rounded-lg p-4">
              <h4 className="font-medium text-gray-900 mb-3">S·∫Ω thi·∫øt l·∫≠p:</h4>
              <ul className="space-y-2 text-sm text-gray-600">
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-purple-500 rounded-full mr-3"></span>
                  Logo v√† banner c·ª≠a h√†ng
                </li>
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-purple-500 rounded-full mr-3"></span>
                  Danh m·ª•c s·∫£n ph·∫©m
                </li>
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-purple-500 rounded-full mr-3"></span>
                  Ch√≠nh s√°ch v·∫≠n chuy·ªÉn
                </li>
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-purple-500 rounded-full mr-3"></span>
                  Ch√≠nh s√°ch ƒë·ªïi tr·∫£
                </li>
              </ul>
            </div>
          </div>
        );

      case 5:
        return (
          <div className="space-y-6">
            <div className="text-center">
              <div className="w-20 h-20 bg-orange-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-3xl">üè¶</span>
              </div>
              <h3 className="text-xl font-semibold text-gray-900 mb-2">
                X√°c minh t√†i kho·∫£n ng√¢n h√†ng
              </h3>
              <p className="text-gray-600 mb-6">
                Li√™n k·∫øt t√†i kho·∫£n ng√¢n h√†ng ƒë·ªÉ nh·∫≠n thanh to√°n t·ª´ ƒë∆°n h√†ng.
              </p>
            </div>

            <div className="bg-gray-50 rounded-lg p-4">
              <h4 className="font-medium text-gray-900 mb-3">Th√¥ng tin ng√¢n h√†ng:</h4>
              <ul className="space-y-2 text-sm text-gray-600">
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-orange-500 rounded-full mr-3"></span>
                  T√™n ng√¢n h√†ng
                </li>
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-orange-500 rounded-full mr-3"></span>
                  S·ªë t√†i kho·∫£n
                </li>
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-orange-500 rounded-full mr-3"></span>
                  T√™n ch·ªß t√†i kho·∫£n
                </li>
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-orange-500 rounded-full mr-3"></span>
                  Sao k√™ ng√¢n h√†ng (ƒë·ªÉ x√°c minh)
                </li>
              </ul>
            </div>
          </div>
        );

      default:
        return null;
    }
  };

  return (
    <div className="max-w-4xl mx-auto">
      <div className="bg-white rounded-xl shadow-lg overflow-hidden">
        {/* Header */}
        <div className="bg-gradient-to-r from-blue-600 to-purple-600 px-8 py-6">
          <h1 className="text-2xl font-bold text-white mb-2">Tr·ªü th√†nh Seller</h1>
          <p className="text-blue-100">
            B·∫Øt ƒë·∫ßu b√°n h√†ng tr√™n n·ªÅn t·∫£ng v√† ki·∫øm thu nh·∫≠p t·ª´ s·∫£n ph·∫©m c·ªßa b·∫°n
          </p>
        </div>

        <div className="flex">
          {/* Sidebar Steps */}
          <div className="w-80 bg-gray-50 px-6 py-8">
            <div className="space-y-4">
              {steps.map((step, index) => (
                <div
                  key={step.id}
                  className={`cursor-pointer transition-colors ${
                    currentStep === step.id ? 'opacity-100' : 'opacity-70'
                  }`}
                  onClick={() => handleStepClick(step.id)}
                >
                  <div className="flex items-start gap-3">
                    <div
                      className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${
                        step.completed
                          ? 'bg-green-500 text-white'
                          : currentStep === step.id
                          ? 'bg-blue-500 text-white'
                          : currentStep > step.id
                          ? 'bg-blue-500 text-white'
                          : 'bg-gray-200 text-gray-600'
                      }`}
                    >
                      {step.completed ? '‚úì' : step.id}
                    </div>
                    <div className="flex-1">
                      <h3
                        className={`font-medium text-sm ${
                          currentStep === step.id ? 'text-gray-900' : 'text-gray-700'
                        }`}
                      >
                        {step.title}
                      </h3>
                      <p className="text-xs text-gray-500 mt-1">{step.description}</p>
                    </div>
                  </div>
                  {index < steps.length - 1 && (
                    <div className="ml-4 mt-2 mb-2 h-6 w-px bg-gray-200"></div>
                  )}
                </div>
              ))}
            </div>
          </div>

          {/* Main Content */}
          <div className="flex-1 px-8 py-8">
            {renderStepContent()}
            
            {/* Navigation Buttons */}
            <div className="flex justify-between mt-8 pt-6 border-t border-gray-200">
              <button
                onClick={() => setCurrentStep(Math.max(1, currentStep - 1))}
                disabled={currentStep === 1}
                className={`px-6 py-2 rounded-lg font-medium transition-colors ${
                  currentStep === 1
                    ? 'bg-gray-100 text-gray-400 cursor-not-allowed'
                    : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
                }`}
              >
                Quay l·∫°i
              </button>
              
              <button
                onClick={() => setCurrentStep(Math.min(steps.length, currentStep + 1))}
                disabled={currentStep === steps.length}
                className={`px-6 py-2 rounded-lg font-medium transition-colors ${
                  currentStep === steps.length
                    ? 'bg-gray-100 text-gray-400 cursor-not-allowed'
                    : 'bg-blue-600 text-white hover:bg-blue-700'
                }`}
              >
                {currentStep === steps.length ? 'Ho√†n th√†nh' : 'Ti·∫øp theo'}
              </button>
            </div>
          </div>
        </div>
      </div>

      {/* Benefits Section */}
      <div className="mt-8 bg-white rounded-xl shadow-lg p-8">
        <h2 className="text-xl font-bold text-gray-900 mb-6">L·ª£i √≠ch khi tr·ªü th√†nh Seller</h2>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div className="text-center">
            <div className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <span className="text-2xl">üí∞</span>
            </div>
            <h3 className="font-semibold text-gray-900 mb-2">Thu nh·∫≠p ·ªïn ƒë·ªãnh</h3>
            <p className="text-gray-600 text-sm">Ki·∫øm ti·ªÅn t·ª´ vi·ªác b√°n s·∫£n ph·∫©m tr√™n n·ªÅn t·∫£ng v·ªõi h·ªá th·ªëng thanh to√°n ƒë√°ng tin c·∫≠y</p>
          </div>
          
          <div className="text-center">
            <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <span className="text-2xl">üöÄ</span>
            </div>
            <h3 className="font-semibold text-gray-900 mb-2">Ti·∫øp c·∫≠n kh√°ch h√†ng</h3>
            <p className="text-gray-600 text-sm">K·∫øt n·ªëi v·ªõi h√†ng tri·ªáu kh√°ch h√†ng ti·ªÅm nƒÉng tr√™n to√†n qu·ªëc</p>
          </div>
          
          <div className="text-center">
            <div className="w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <span className="text-2xl">üìä</span>
            </div>
            <h3 className="font-semibold text-gray-900 mb-2">C√¥ng c·ª• qu·∫£n l√Ω</h3>
            <p className="text-gray-600 text-sm">S·ª≠ d·ª•ng b·ªô c√¥ng c·ª• m·∫°nh m·∫Ω ƒë·ªÉ qu·∫£n l√Ω ƒë∆°n h√†ng v√† theo d√µi doanh thu</p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default BecomeSellerWizard;